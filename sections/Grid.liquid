<!-- Section HTML -->
<section class="popup-section">
  <div class="container">
    <h2>{{ section.settings.section_title }}</h2>
    <div class="grid">
      {% for block in section.blocks %}
        <div class="grid-item">
          {% if block.settings.product_image %}
            <div class="image-wrapper" data-popup="popup-{{ block.id }}">
              <img src="{{ block.settings.product_image | img_url: 'large' }}" alt="{{ block.settings.product_title }}">
              <div class="plus-icon">+</div>
            </div>

            {% assign product = block.settings.product_image %}
            <script>

              all_products.push({
                product : `{{ product.id }}`,
                variants : `{{ product.variants | json }}`
              })
            </script>
            <!-- Popup -->
            <div id="popup-{{ block.id }}" class="popupss">
              <div class="popup-content">
                <span class="close">&times;</span>
                <div class="popup-inner">
                  <div class="popup-image">
                    <div class="products_imagge">
                      <img
                        src="{{ block.settings.product_image | img_url: 'large' }}"
                        alt="{{ block.settings.product_title }}"
                      >
                    </div>
                    <div class="products_details">
                      <h3>{{ block.settings.product_title }}</h3>
                      <p class="price">{{ block.settings.product_price }}</p>
                      <p class="description">{{ block.settings.product_description }}</p>
                    </div>
                  </div>
                  <div data-parent="{{  product.id }}" class="popup-details">
                    <!-- color -->

                    {% for option in product.options_with_values %}
                      {% if option.name == 'Color' %}
                        <div class="{{ option.name }}-options new_colors">
                          <span>{{ option.name }}</span>
                          <div class="{{ option.name }}-choices">
                            {% for value in option.values %}
                              <span
                                class="colorss"
                                style="background-color: {{ value | downcase }};"
                                data-color="{{ value | escape }}"
                              >
                              </span>
                              <label>
                                <div class="{{ option.name }}-option" data-{{ option.name }}="{{ value | strip }}">
                                  <input
                                    type="radio"
                                    name="color-option"
                                    value="{{ value | escape }}"
                                    data-color="{{ value | escape }}"
                                  >
                                  {{ value | strip }}
                                </div>
                              </label>
                            {% endfor %}
                          </div>
                        </div>
                      {% endif %}
                    {% endfor %}

                    <!-- Size Options -->
                    {% for option in product.options_with_values %}
                      {% if option.name == 'Size' %}
                        <div class="dropdown-container">
                          <label class="drop-labels" for="{{ option.name }}">{{ option.name }}</label>
                          <div class="drop-downs">
                            <div class="names">Choose your {{ option.name | downcase }}</div>
                            <span class="emptys"></span>
                          </div>

                          <!-- Initially hidden dropdown list -->
                          <ul
                            class="dropdown-lists"
                            style="max-height: 0; overflow: hidden; transition: max-height 0.3s ease;"
                          >
                            {% for value in option.values %}
                              <li data-value="{{ value | strip }}" class="size-option">{{ value | strip }}</li>
                            {% endfor %}
                          </ul>
                        </div>
                      {% endif %}
                    {% endfor %}

                    <!-- Add to Cart Button -->
                    <form action="/cart/add" method="post" enctype="multipart/form-data" class="add_form">
                      <input type="hidden" name="id" value="{{ product.variants.first.id }}">
                      <button type="submit" data-product="{{ product.id }}" class="add-to-cart">
                        <span>ADD TO CART</span>
                        <svg xmlns="http://www.w3.org/2000/svg" width="36" height="12" viewBox="0 0 36 12" fill="none">
                          <path d="M1.40918 5.25L0.65918 5.25L0.65918 6.75L1.40918 6.75L1.40918 5.25ZM35.639 6.53033C35.9319 6.23744 35.9319 5.76257 35.639 5.46967L30.866 0.696701C30.5731 0.403808 30.0983 0.403808 29.8054 0.696701C29.5125 0.989594 29.5125 1.46447 29.8054 1.75736L34.048 6L29.8054 10.2426C29.5125 10.5355 29.5125 11.0104 29.8054 11.3033C30.0983 11.5962 30.5731 11.5962 30.866 11.3033L35.639 6.53033ZM1.40918 6.75L35.1087 6.75L35.1087 5.25L1.40918 5.25L1.40918 6.75Z" fill="white"/>
                        </svg>
                      </button>
                    </form>
                  </div>
                </div>
              </div>
            </div>
          {% endif %}
        </div>
      {% endfor %}
    </div>
  </div>
</section>
{% schema %}
{
  "name": "Grid",
  "settings": [
    {
      "type": "text",
      "id": "section_title",
      "label": "Section Title",
      "default": "Tisso vision in the wild"
    }
  ],
  "blocks": [
    {
      "type": "image",
      "name": "Product Popup",
      "settings": [
        {
          "type": "product",
          "id": "product_image",
          "label": "Product Image"
        },
        {
          "type": "text",
          "id": "product_title",
          "label": "Product Title",
          "default": "Orange Wide Leg"
        },
        {
          "type": "text",
          "id": "product_price",
          "label": "Product Price",
          "default": "980,00â‚¬"
        },
        {
          "type": "textarea",
          "id": "product_description",
          "label": "Product Description",
          "default": "This one-piece swimsuit is crafted from jersey featuring an allover micro Monogram motif in relief."
        },

      ]
    }
  ],
  "presets": [
    {
      "name": "Grids",
    }
  ]
}
{% endschema %}
<script>
  document.addEventListener("DOMContentLoaded", function() {

      // Open popup when image is clicked
      document.querySelectorAll('.image-wrapper').forEach(wrapper => {
          wrapper.addEventListener('click', function() {
              document.querySelectorAll('.popupss').forEach(popup => popup.style.display = 'none');
              let popupId = wrapper.getAttribute('data-popup');
              let popup = document.getElementById(popupId);
              popup.style.display = 'block';
          });
      });

      // Close popup when close button is clicked
      document.querySelectorAll('.close').forEach(btn => {
          btn.addEventListener('click', function() {
              this.closest('.popupss').style.display = 'none';
          });
      });

      // Add to Cart functionality with redirection
      document.querySelectorAll('.add-to-cart').forEach(button => {
          button.addEventListener('click', function(event) {
              event.preventDefault();
              let form = this.closest("form");
              let formData = new FormData(form);

              fetch('/cart/add.js', {
                  method: 'POST',
                  body: formData
              })
              .then(response => response.json())
              .then(data => {
                  window.location.href = "/cart";
              })
              .catch(error => {
                  console.error('Error adding to cart:', error);
              });
          });
      });

      // Dropdown toggle and selection
      document.querySelectorAll('.dropdown-container').forEach(container => {
          const dropdownBox = container.querySelector('.drop-downs');
          const dropdownList = container.querySelector('.dropdown-lists');

          dropdownBox.addEventListener('click', function() {
              const isOpen = dropdownList.style.maxHeight !== '0px';
              dropdownList.style.maxHeight = isOpen ? '0' : dropdownList.scrollHeight + 'px';
          });

          dropdownList.querySelectorAll('li').forEach(item => {
              item.addEventListener('click', function() {
                  dropdownBox.innerHTML = this.innerHTML;
                  dropdownList.style.maxHeight = '0';
              });
          });

          document.addEventListener('click', function(e) {
              if (!container.contains(e.target)) {
                  dropdownList.style.maxHeight = '0';
              }
          });
      });

      // Handle selection for color and size options
      function handleSelection(options) {
          options.forEach(option => {
              option.addEventListener('click', function() {
                  options.forEach(opt => opt.classList.remove('selected'));
                  this.classList.add('selected');
              });
          });
      }

      handleSelection(document.querySelectorAll('.Color-option'));
      handleSelection(document.querySelectorAll('.size-option'));

  });
</script>
